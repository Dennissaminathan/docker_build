version: '3.7'

services:
  alpine:
    build: 
      dockerfile: Dockerfile-alpine-runtime
      context: ./../docker_alpine
    image: #project#/alpine:latest
  build:
    build: 
      dockerfile: Dockerfile-build-runtime
      context: .
    image: #project#/build:latest  
  mariadbvault:
    image: #project#/mariadb:latest
    hostname: mariadbvault
    restart: "no"
    dns: #corednsIPADDR#
    volumes:
      - mariadbvault-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #mariadbvaultIPADDR#
    healthcheck:
      test: "mysqladmin status -h 127.0.0.1 -u healthstatus -p#mariadbvaultHEALTHPWD# -P #mariadbvaultEXTPORT#"
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - MDB_ROLEID=#mariadbvaultROLEID#
      - MDB_ROOTPWD=#mariadbvaultROOTPWD#
      - MDB_PORT=#mariadbvaultINTPORT#
      - MDB_ADMINUSER=#mariadbvaultADMINUSER#
      - MDB_BACKUPUSER=#mariadbvaultBACKUPUSER#
      - MDB_ADMINPWD=#mariadbvaultADMINPWD#
      - MDB_BACKUPPWD=#mariadbvaultBACKUPPWD#
      - MDB_HEALTHPWD=#mariadbvaultHEALTHPWD#
      - MDB_COLLATION=#mariadbvaultCOLLATION#
      - MDB_CHARACTERSET=#mariadbvaultCHARACTERSET#
  go:
    build: 
      dockerfile: Dockerfile-go-runtime
      context: ./../docker_go
    image: #project#/go:latest
  jre8:
    build: 
      dockerfile: Dockerfile-jre8-runtime
      context: ./../docker_java
    image: #project#/jre8:latest
  jdk8:
    build: 
      dockerfile: Dockerfile-jdk8-runtime
      context: ./../docker_java
    image: #project#/jdk8:latest
  jre11:
    build: 
      dockerfile: Dockerfile-jre11-runtime
      context: ./../docker_java
    image: #project#/jre11:latest
  jdk11:
    build: 
      dockerfile: Dockerfile-jdk11-runtime
      context: ./../docker_java
    image: #project#/jdk11:latest
  vault:
    build: 
      dockerfile: Dockerfile-vault-runtime
      context: ./../docker_vault
    image: #project#/vault:latest
    hostname: vault
    restart: "no"
    dns: #corednsIPADDR#
    depends_on:
      - mariadbvault
    volumes:
      - vault-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #vaultIPADDR#
    healthcheck:
      test: "curl --fail https://localhost:#vaultINTPORT# --insecure || false"
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - VLT_ROLEID=#vaultROLEID#
      - VLT_MYSQLADMINUSER=#vaultMYSQLADMINUSER#
      - VLT_MYSQLADMINPASSWORD=#vaultMYSQLADMINPASSWORD#
      - VLT_MYSQLHOST=#vaultMYSQLHOST#
      - VLT_MYSQLPORT=#vaultMYSQLPORT#
      - VLT_MYSQLDB=#vaultMYSQLDB#
      - VLT_MYSQLUSERNAME=#vaultMYSQLUSERNAME#
      - VLT_MYSQLPASSWORD=#vaultMYSQLPASSWORD#
      - VLT_MYSQLHEALTHUSER=#vaultMYSQLHEALTHUSER#
      - VLT_MYSQLHEALTHPWD=#vaultMYSQLHEALTHPWD#
      - VLT_IPADDRESS=#vaultIPADDRESS#
      - VLT_PORT=#vaultINTPORT#
      - VLT_REMOVE_DB=#vaultREMOVE_DB#
      - CRT_VALIDITY=#certificatesVALIDITY#
      - CRT_C=#certificatesCOUNTRY#
      - CRT_S=#certificatesSTATE#
      - CRT_L=#certificatesLOCATION#
      - CRT_OU=#certificatesOU#
      - CRT_CN=#vaultCRTCOMMONNAME#
  coredns:
    build: 
      dockerfile: Dockerfile-coredns-runtime
      context: ./../docker_coredns
    image: #project#/coredns:latest
    hostname: coredns
    restart: "no"
    dns: #corednsIPADDR#
    volumes:
      - coredns-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #corednsIPADDR#
    healthcheck:
      test: ["CMD", "dig", "#corednsDIGADDRESS#"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - DNS_ROLEID=#corednsROLEID#
      - DNS_INITDOMAIN=#corednsINITDOMAIN#
      - DNS_IPADDR=#corednsIPADDR#
      - VLT_IPADDR=#vaultIPADDR#
      - NGX_IPADDR=#nginxIPADDR#
      - LBK_IPADDR=#leberkasIPADDR#
      - MDB_IPADDR=#mariadbIPADDR#
      - DBV_IPADDR=#mariadbvaultIPADDR#
      - GT_IPADDR=#giteaIPADDR#
      - JKS_IPADDR=#jenkinsIPADDR#
      - KC_IPADDR=#keycloakIPADDR#
      - NXS_IPADDR=#nexusIPADDR#
      - DCR_IPADDR=#nexusIPADDR#
  nginx:
    build: 
      dockerfile: Dockerfile-nginx-runtime
      context: ./../docker_nginx
    image: #project#/nginx:latest
    hostname: nginx
    restart: "no"
    dns: #corednsIPADDR#
    ports:
      - "#nginxEXTPORT#:#nginxINTPORT#"
    volumes:
      - nginx-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #nginxIPADDR#
    healthcheck:
      test: "curl --fail https://localhost:#nginxINTPORT# --insecure || false"
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - NGX_ROLEID=#nginxROLEID#
      - NGX_PORT=#nginxINTPORT#
      - DNS_IPADDR=#corednsIPADDR#
      - DNS_INITDOMAIN=#corednsINITDOMAIN#
      - VLT_PORT=#vaultINTPORT#
      - GT_PORT=#giteaINTPORT#
      - LBK_PORT=#leberkasINTPORT#
      - JKS_PORT=#jenkinsINTPORT#
      - KC_PORT=#keycloakHTTPSINTPORT#
      - KC_MGMTPORT=#keycloakMGNTHTTPSINTPORT#
      - NXS_PORT=#nexusINTPORT#
      - NXS_DOCKERPORT=#nexusDOCKERPORT#
      - CRT_VALIDITY=#certificatesVALIDITY#
      - CRT_C=#certificatesCOUNTRY#
      - CRT_S=#certificatesSTATE#
      - CRT_L=#certificatesLOCATION#
      - CRT_OU=#certificatesOU#
      - CRT_CN=#nginxCRTCOMMONNAME#
  leberkas:
    build:
      dockerfile: Dockerfile-leberkas-runtime
      context: ./../docker_leberkas
    image: #project#/leberkas:latest
    hostname: leberkas
    dns: #corednsIPADDR#
    volumes:
      - leberkas-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #leberkasIPADDR#
    environment:
      - NGX_ROLEID=#leberkasROLEID#
      - LBK_PORT=#leberkasINTPORT#
      - DNS_IPADDR=#corednsIPADDR#
      - DNS_INITDOMAIN=#corednsINITDOMAIN#
      - NXS_DOCKERPORT=#nexusDOCKERPORT#
      - CRT_VALIDITY=#certificatesVALIDITY#
      - CRT_C=#certificatesCOUNTRY#
      - CRT_S=#certificatesSTATE#
      - CRT_L=#certificatesLOCATION#
      - CRT_OU=#certificatesOU#
      - CRT_CN=#nginxCRTCOMMONNAME#
  mariadb:
    build: 
      dockerfile: Dockerfile-mariadb-runtime
      context: ./../docker_mariadb
    image: #project#/mariadb:latest
    hostname: mariadb
    restart: "no"
    dns: #corednsIPADDR#
    volumes:
      - mariadb-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #mariadbIPADDR#
    healthcheck:
      test: "mysqladmin status -h 127.0.0.1 -u healthstatus -p#mariadbHEALTHPWD# -P #mariadbINTPORT#"
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - MDB_ROLEID=#mariadbROLEID#
      - MDB_ROOTPWD=#mariadbROOTPWD#
      - MDB_PORT=#mariadbINTPORT#
      - MDB_ADMINUSER=#mariadbADMINUSER#
      - MDB_BACKUPUSER=#mariadbBACKUPUSER#
      - MDB_ADMINPWD=#mariadbADMINPWD#
      - MDB_BACKUPPWD=#mariadbBACKUPPWD#
      - MDB_HEALTHPWD=#mariadbHEALTHPWD#
      - MDB_COLLATION=#mariadbCOLLATION#
      - MDB_CHARACTERSET=#mariadbCHARACTERSET#
  gitea:
    build: 
      dockerfile: Dockerfile-gitea-runtime
      context: ./../docker_gitea
    image: #project#/gitea:latest
    hostname: gitea
    restart: "no"
    dns: #corednsIPADDR#
    depends_on:
      - mariadb
    volumes:
      - gitea-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #giteaIPADDR#
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:#giteaINTPORT#", "--insecure"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - GT_ROLEID=#giteaROLEID#
      - GT_APPNAME=#giteaAPPNAME#
      - GT_MYSQLADMINUSER=#giteaMYSQLADMINUSER#
      - GT_MYSQLADMINPASSWORD=#giteaMYSQLADMINPASSWORD#
      - GT_MYSQLHOST=#giteaMYSQLHOST#
      - GT_MYSQLPORT=#giteaMYSQLPORT#
      - GT_MYSQLDB=#giteaMYSQLDB#
      - GT_MYSQLUSERNAME=#giteaMYSQLUSERNAME#
      - GT_MYSQLPASSWORD=#giteaMYSQLPASSWORD#
      - GT_MYSQLHEALTHUSER=#giteaMYSQLHEALTHUSER#
      - GT_MYSQLHEALTHPWD=#giteaMYSQLHEALTHPWD#
      - GT_PROTOCOL=#giteaPROTOCOL#
      - GT_HTTP_PORT=#giteaINTPORT#
      - GT_INITIALADMIN=#giteaINITIALADMIN#
      - GT_INITIALADMINPWD=#giteaINITIALADMINPWD#
      - GT_INITIALADMINMAIL=#giteaINITIALADMINMAIL#
      - GT_REMOVE_DB=#giteaREMOVE_DB#
      - GT_MAILENABLED=#giteaMAILENABLED#
      - GT_MAILSUBJECTPREFIX=#giteaMAILSUBJECTPREFIX#
      - GT_MAILHOST=#giteaMAILHOST#
      - GT_MAILFROM=#giteaMAILFROM#
      - GT_MAILUSER=#giteaMAILUSER#
      - GT_MAILPASSWD=#giteaMAILPASSWD#
      - CRT_VALIDITY=#certificatesVALIDITY#
      - CRT_C=#certificatesCOUNTRY#
      - CRT_S=#certificatesSTATE#
      - CRT_L=#certificatesLOCATION#
      - CRT_OU=#certificatesOU#
      - CRT_CN=#giteaCRTCOMMONNAME#
  jenkins:
    build: 
      dockerfile: Dockerfile-jenkins-runtime
      context: ./../docker_jenkins
    image: #project#/jenkins:latest
    hostname: jenkins
    restart: "no"
    dns: #corednsIPADDR#
    depends_on:
      - jre11
    volumes:
      - jenkins-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #jenkinsIPADDR#
    healthcheck:
      test: "curl --fail https://localhost:#jenkinsINTPORT# --insecure || false"
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - JKS_ROLEID=#jenkinsROLEID#
      - JKS_CERTPWD=#jenkinsCERTPWD#
      - JKS_HTTPS_PORT=#jenkinsINTPORT#
      - JKS_MAIL=#jenkinsMAIL#
      - JKS_URL=#jenkinsURL#
      - JKS_SLAVEPORT=#jenkinsSLAVEPORT#
      - CRT_VALIDITY=#certificatesVALIDITY#
      - CRT_C=#certificatesCOUNTRY#
      - CRT_S=#certificatesSTATE#
      - CRT_L=#certificatesLOCATION#
      - CRT_OU=#certificatesOU#
      - CRT_CN=#jenkinsCRTCOMMONNAME#
  keycloak:
    build: 
      dockerfile: Dockerfile-keycloak-runtime
      context: ./../docker_keycloak
    image: #project#/keycloak:latest
    hostname: keycloak
    restart: "no"
    dns: #corednsIPADDR#
    volumes:
      - keycloak-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #keycloakIPADDR#
    healthcheck:
      test: "curl --fail https://#keycloakIPADDR#:#keycloakHTTPSINTPORT# --insecure || false"
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - KC_ROLEID=#keycloakROLEID#
      - KC_AJPINTPORT=#keycloakAJPINTPORT#
      - KC_HTTPINTPORT=#keycloakHTTPINTPORT#
      - KC_HTTPSINTPORT=#keycloakHTTPSINTPORT#
      - KC_MGNTHTTPINTPORT=#keycloakMGNTHTTPINTPORT#
      - KC_MGNTHTTPSINTPORT=#keycloakMGNTHTTPSINTPORT#
      - KC_MYSQLADMINUSER=#keycloakMYSQLADMINUSER#
      - KC_MYSQLADMINPASSWORD=#keycloakMYSQLADMINPASSWORD#
      - KC_MYSQLHOST=#keycloakMYSQLHOST#
      - KC_MYSQLPORT=#keycloakMYSQLPORT#
      - KC_MYSQLDB=#keycloakMYSQLDB#
      - KC_MYSQLUSERNAME=#keycloakMYSQLUSERNAME#
      - KC_MYSQLPASSWORD=#keycloakMYSQLPASSWORD#
      - KC_MYSQLHEALTHUSER=#keycloakMYSQLHEALTHUSER#
      - KC_MYSQLHEALTHPWD=#keycloakMYSQLHEALTHPWD#
      - KC_BINDADDRESS=#keycloakIPADDR#
      - KC_REMOVE_DB=#keycloakREMOVE_DB#
      - KC_CERTPWD=#keycloakCERTPWD#
      - KC_ADMINUSER=#keycloakADMINUSER#
      - KC_ADMINPWD=#keycloakADMINPWD#
      - KC_CREATEINITREALM=#keycloakCREATEINITREALM#
      - KC_INITREALM=#keycloakINITREALM#
      - KC_INITUSERMAILDOMAIN=#keycloakINITUSERMAILDOMAIN#
      - KC_INITUSERPASSWORD=#keycloakINITUSERPASSWORD#
      - CRT_VALIDITY=#certificatesVALIDITY#
      - CRT_C=#certificatesCOUNTRY#
      - CRT_S=#certificatesSTATE#
      - CRT_L=#certificatesLOCATION#
      - CRT_OU=#certificatesOU#
      - CRT_CN=#keycloakCRTCOMMONNAME#
  nexus:
    build: 
      dockerfile: Dockerfile-nexus-runtime
      context: ./../docker_nexus
    image: #project#/nexus:latest
    hostname: nexus
    restart: "no"
    dns: #corednsIPADDR#
    volumes:
      - nexus-data:/home/appuser/data
    networks:
      appnet:
        ipv4_address: #nexusIPADDR#
    healthcheck:
      test: "curl --fail https://#nexusIPADDR#:#nexusINTPORT# --insecure || false"
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      - NX_ROLEID=#keycloakROLEID#
      - NX_CERTPWD=#nexusCERTPWD#
      - CRT_VALIDITY=#certificatesVALIDITY#
      - CRT_C=#certificatesCOUNTRY#
      - CRT_S=#certificatesSTATE#
      - CRT_L=#certificatesLOCATION#
      - CRT_OU=#certificatesOU#
      - CRT_CN=#keycloakCRTCOMMONNAME#
networks:
  appnet:
    ipam:
      driver: default
      config:
        - subnet: "172.6.66.0/24"
volumes:
  mariadbvault-data:
  vault-data:
  coredns-data:
  nginx-data:
  leberkas-data:
  mariadb-data:
  gitea-data:
  jenkins-data:
  keycloak-data:
  nexus-data:
